{"ast":null,"code":"import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token for the MatInkBar's Positioner. */\n\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\n\nconst _c0 = [\"*\"];\n\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\n\nconst _c1 = function (a0) {\n  return {\n    animationDuration: a0\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\n\nconst _c3 = [\"tabListContainer\"];\nconst _c4 = [\"tabList\"];\nconst _c5 = [\"tabListInner\"];\nconst _c6 = [\"nextPaginator\"];\nconst _c7 = [\"previousPaginator\"];\nconst _c8 = [\"tabBodyWrapper\"];\nconst _c9 = [\"tabHeader\"];\n\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\n\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const tab_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(1);\n\n      return ctx_r12._handleClick(tab_r4, _r0, i_r5);\n    })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r5 = restoredCtx.index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14._tabFocusChanged($event, i_r5);\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    i0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n\n    const _r7 = i0.ɵɵreference(4);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex === i_r5);\n    i0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"ngClass\", tab_r4.labelClass)(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex === i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel)(\"ngIfElse\", _r7);\n  }\n}\n\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 11);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17._removeTabBodyWrapperHeight();\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19._setTabBodyWrapperHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tab_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r16);\n    i0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r16))(\"ngClass\", tab_r15.bodyClass)(\"content\", tab_r15.content)(\"position\", tab_r15.position)(\"origin\", tab_r15.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    i0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r16 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r16));\n  }\n}\n\nconst _c10 = [\"mat-tab-nav-bar\", \"\"];\n\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\n\n\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n\n\nclass MatInkBar {\n  constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n    this._animationMode = _animationMode;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n\n\n  alignToElement(element) {\n    this.show();\n\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      const positions = this._inkBarPositioner(element);\n\n      const inkBar = this._elementRef.nativeElement;\n      inkBar.style.left = positions.left;\n      inkBar.style.width = positions.width;\n    });\n  }\n  /** Shows the ink bar. */\n\n\n  show() {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n  /** Hides the ink bar. */\n\n\n  hide() {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n}\n\nMatInkBar.ɵfac = function MatInkBar_Factory(t) {\n  return new (t || MatInkBar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatInkBar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatInkBar,\n  selectors: [[\"mat-ink-bar\"]],\n  hostAttrs: [1, \"mat-ink-bar\"],\n  hostVars: 2,\n  hostBindings: function MatInkBar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInkBar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-ink-bar',\n      host: {\n        'class': 'mat-ink-bar',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_MAT_INK_BAR_POSITIONER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\n\nclass MatTabContent {\n  constructor(\n  /** Content for the tab. */\n  template) {\n    this.template = template;\n  }\n\n}\n\nMatTabContent.ɵfac = function MatTabContent_Factory(t) {\n  return new (t || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nMatTabContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabContent,\n  selectors: [[\"\", \"matTabContent\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_CONTENT,\n    useExisting: MatTabContent\n  }])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]',\n      providers: [{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\n\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\n\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\n\nclass MatTabLabel extends CdkPortal {\n  constructor(templateRef, viewContainerRef, _closestTab) {\n    super(templateRef, viewContainerRef);\n    this._closestTab = _closestTab;\n  }\n\n}\n\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) {\n  return new (t || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n};\n\nMatTabLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabel,\n  selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_LABEL,\n    useExisting: MatTabLabel\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]',\n      providers: [{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n\n/** @docs-private */\n\n\nconst _MatTabBase = mixinDisabled(class {});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\n\n\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\n\nclass MatTab extends _MatTabBase {\n  constructor(_viewContainerRef, _closestTabGroup) {\n    super();\n    this._viewContainerRef = _viewContainerRef;\n    this._closestTabGroup = _closestTabGroup;\n    /** Plain text label for the tab, used when there is no template label. */\n\n    this.textLabel = '';\n    /** Portal that will be the hosted content of the tab */\n\n    this._contentPortal = null;\n    /** Emits whenever the internal state of the tab changes. */\n\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n\n    this.isActive = false;\n  }\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n\n\n  get templateLabel() {\n    return this._templateLabel;\n  }\n\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  /** @docs-private */\n\n\n  get content() {\n    return this._contentPortal;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n\n\n  _setTemplateLabelInput(value) {\n    // Only update the label if the query managed to find one. This works around an issue where a\n    // user may have manually set `templateLabel` during creation mode, which would then get\n    // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n    // tab matches the current one so that we don't pick up labels from nested tabs.\n    if (value && value._closestTab === this) {\n      this._templateLabel = value;\n    }\n  }\n\n}\n\nMatTab.ɵfac = function MatTab_Factory(t) {\n  return new (t || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n};\n\nMatTab.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTab,\n  selectors: [[\"mat-tab\"]],\n  contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    }\n  },\n  viewQuery: function MatTab_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TemplateRef, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    textLabel: [\"label\", \"textLabel\"],\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    labelClass: \"labelClass\",\n    bodyClass: \"bodyClass\"\n  },\n  exportAs: [\"matTab\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB,\n    useExisting: MatTab\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTab_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      inputs: ['disabled'],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab',\n      providers: [{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }],\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB_GROUP]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    templateLabel: [{\n      type: ContentChild,\n      args: [MAT_TAB_LABEL]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MAT_TAB_CONTENT, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    labelClass: [{\n      type: Input\n    }],\n    bodyClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\n\n\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [// Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })), // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n    this._host = _host;\n    /** Subscription to events for when the tab body begins centering. */\n\n    this._centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n  /** Clean up centering subscription. */\n\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._centeringSub.unsubscribe();\n\n    this._leavingSub.unsubscribe();\n  }\n\n}\n\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n  return new (t || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nMatTabBodyPortal.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabBodyPortal,\n  selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: MatTabBody,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatTabBody)]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n\n\nclass _MatTabBodyBase {\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /** Subscription to the directionality change observable. */\n\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Emits when an animation on the tab is complete. */\n\n    this._translateTabComplete = new Subject();\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n\n    this._onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n\n    this._beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n\n    this._afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n\n    this._onCentered = new EventEmitter(true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n\n    /** Duration for the tab's animation. */\n\n    this.animationDuration = '500ms';\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n\n        changeDetectorRef.markForCheck();\n      });\n    } // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n\n\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n\n\n  set position(position) {\n    this._positionIndex = position;\n\n    this._computePositionAnimationState();\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n\n\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event) {\n    const isCentering = this._isCenterPosition(event.toState);\n\n    this._beforeCentering.emit(isCentering);\n\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** The text direction of the containing app. */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n\n\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n\n\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n\n\n  _computePositionFromOrigin(origin) {\n    const dir = this._getLayoutDirection();\n\n    if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n\n}\n\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {\n  return new (t || _MatTabBodyBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\n_MatTabBodyBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabBodyBase,\n  inputs: {\n    _content: [\"content\", \"_content\"],\n    origin: \"origin\",\n    animationDuration: \"animationDuration\",\n    position: \"position\"\n  },\n  outputs: {\n    _onCentering: \"_onCentering\",\n    _beforeCentering: \"_beforeCentering\",\n    _afterLeavingCenter: \"_afterLeavingCenter\",\n    _onCentered: \"_onCentered\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabBodyBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n\n\nclass MatTabBody extends _MatTabBodyBase {\n  constructor(elementRef, dir, changeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n\n}\n\nMatTabBody.ɵfac = function MatTabBody_Factory(t) {\n  return new (t || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMatTabBody.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabBody,\n  selectors: [[\"mat-tab-body\"]],\n  viewQuery: function MatTabBody_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-body\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n  template: function MatTabBody_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n        return ctx._onTranslateTabStarted($event);\n      })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n        return ctx._translateTabComplete.next($event);\n      });\n      i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c2, ctx._position, i0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    }\n  },\n  directives: [MatTabBodyPortal],\n  styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matTabsAnimations.translateTab]\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-tab-body'\n      },\n      template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _portalHost: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that can be used to provide the default options the tabs module. */\n\n\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n\n/** @docs-private */\n\nconst _MatTabLabelWrapperBase = mixinDisabled(class {});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n\n\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n  }\n  /** Sets focus on the wrapper element */\n\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n}\n\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n  return new (t || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nMatTabLabelWrapper.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabelWrapper,\n  selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n  hostVars: 3,\n  hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      inputs: ['disabled'],\n      host: {\n        '[class.mat-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Config used to bind passive event listeners */\n\n\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\n\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\n\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\n\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n\nclass MatPaginatedTabHeader {\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n\n    this._scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n\n    this._selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n\n    this._showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n\n    this._disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n\n    this._disableScrollBefore = true;\n    /** Stream that will stop the automated scrolling. */\n\n    this._stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n\n    this.disablePagination = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n\n    this.selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n\n    this.indexFocused = new EventEmitter(); // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    });\n  }\n  /** The index of the active tab. */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n\n    const resize = this._viewportRuler.change(150);\n\n    const realign = () => {\n      this.updatePagination();\n\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();\n\n    this._keyManager.updateActiveItem(this._selectedIndex); // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n    // can hold up tests that are in a background tab.\n\n\n    this._ngZone.onStable.pipe(take(1)).subscribe(realign); // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n\n\n    merge(dirChange, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => {\n        Promise.resolve().then(() => {\n          // Clamp the scroll distance, because it can change with the number of tabs.\n          this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n          realign();\n        });\n      });\n\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    }); // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /** Sends any changes that could affect the layout of the items. */\n\n\n  _itemsResized() {\n    if (typeof ResizeObserver !== 'function') {\n      return EMPTY;\n    }\n\n    return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n      const resizeObserver = new ResizeObserver(() => {\n        observer.next();\n      });\n      tabItems.forEach(item => {\n        resizeObserver.observe(item.elementRef.nativeElement);\n      });\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }))), // Skip the first emit since the resize observer emits when an item\n    // is observed for new items when the tab is already inserted\n    skip(1));\n  }\n\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n\n\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n\n      this._checkScrollingControls();\n\n      this._alignInkBarToSelectedTab();\n\n      this._selectedIndexChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n\n\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n\n      this._scrollDistanceChanged = false;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n\n    this._destroyed.complete();\n\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n\n\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n\n          this._itemSelected(event);\n        }\n\n        break;\n\n      default:\n        this._keyManager.onKeydown(event);\n\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n\n\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || ''; // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n\n      this._ngZone.run(() => {\n        this.updatePagination();\n\n        this._alignInkBarToSelectedTab();\n\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n\n\n  updatePagination() {\n    this._checkPaginationEnabled();\n\n    this._checkScrollingControls();\n\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n\n\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n\n\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n\n\n  _isValidIndex(index) {\n    if (!this._items) {\n      return true;\n    }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n\n\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n\n\n      const containerEl = this._tabListContainer.nativeElement;\n\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n\n\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n\n\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`; // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n\n\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.\n\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n\n\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    } // The view length is the visible width of the tab labels.\n\n\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._showPaginationControls = isEnabled;\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n\n\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n\n\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n\n\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n\n\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    } // Avoid overlapping timers.\n\n\n    this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.\n\n\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction); // Stop the timer if we've reached the start or the end.\n\n\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n\n\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n\n    const maxScrollDistance = this._getMaxScrollDistance();\n\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n\n    this._scrollDistanceChanged = true;\n\n    this._checkScrollingControls();\n\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n\n}\n\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n  return new (t || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPaginatedTabHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatPaginatedTabHeader,\n  inputs: {\n    disablePagination: \"disablePagination\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disablePagination: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n\n\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n  }\n  /** Whether the ripple effect is disabled or not. */\n\n\n  get disableRipple() {\n    return this._disableRipple;\n  }\n\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n\n}\n\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {\n  return new (t || _MatTabHeaderBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabHeaderBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabHeaderBase,\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n\n\nclass MatTabHeader extends _MatTabHeaderBase {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n}\n\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n  return new (t || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabHeader.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabHeader,\n  selectors: [[\"mat-tab-header\"]],\n  contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabHeader_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-header\"],\n  hostVars: 4,\n  hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    }\n  },\n  inputs: {\n    selectedIndex: \"selectedIndex\"\n  },\n  outputs: {\n    selectFocusedIndex: \"selectFocusedIndex\",\n    indexFocused: \"indexFocused\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 10,\n  consts: [[\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"tabListInner\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabHeader_Template_button_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabHeader_Template_button_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabHeader_Template_button_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7, 8);\n      i0.ɵɵprojection(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"mat-ink-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 9, 10);\n      i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_button_mousedown_11_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabHeader_Template_button_click_11_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabHeader_Template_button_touchend_11_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(13, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n    }\n  },\n  directives: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      inputs: ['selectedIndex'],\n      outputs: ['selectFocusedIndex', 'indexFocused'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID's for each tab component */\n\n\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\n\nclass MatTabChangeEvent {} // Boilerplate for applying mixins to MatTabGroup.\n\n/** @docs-private */\n\n\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n\n\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n  constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** All of the tabs that belong to the group. */\n\n    this._tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n\n    this._indexToSelect = 0;\n    /** Index of the tab that was focused last. */\n\n    this._lastFocusedTabIndex = null;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n\n    this._tabBodyWrapperHeight = 0;\n    /** Subscription to tabs being added/removed. */\n\n    this._tabsSubscription = Subscription.EMPTY;\n    /** Subscription to changes in the tab labels. */\n\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._selectedIndex = null;\n    /** Position of the tab header. */\n\n    this.headerPosition = 'above';\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n\n    this.selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n\n    this.focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n\n    this.animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n\n    this.selectedTabChange = new EventEmitter(true);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n    this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n  }\n  /** Whether the tab group should grow to the size of the active tab. */\n\n\n  get dynamicHeight() {\n    return this._dynamicHeight;\n  }\n\n  set dynamicHeight(value) {\n    this._dynamicHeight = coerceBooleanProperty(value);\n  }\n  /** The index of the active tab. */\n\n\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n\n  set selectedIndex(value) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n\n\n  get animationDuration() {\n    return this._animationDuration;\n  }\n\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n  }\n  /**\n   * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n   * accessibility when the tab does not have focusable elements or if it has scrollable content.\n   * The `tabindex` will be removed automatically for inactive tabs.\n   * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n   */\n\n\n  get contentTabIndex() {\n    return this._contentTabIndex;\n  }\n\n  set contentTabIndex(value) {\n    this._contentTabIndex = coerceNumberProperty(value, null);\n  }\n  /** Background color of the tab group. */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value) {\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n\n\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n\n\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect)); // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      } // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n\n\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect); // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    } // Setup the position for each tab and optionally setup an origin on the next selected tab.\n\n\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._lastFocusedTabIndex = null;\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n\n    this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n\n\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n\n\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        let selectedTab;\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            this._lastFocusedTabIndex = null;\n            selectedTab = tabs[i];\n            break;\n          }\n        } // If we haven't found an active tab and a tab exists at the selected index, it means\n        // that the active tab was swapped out. Since this won't be picked up by the rendering\n        // loop in `ngAfterContentChecked`, we need to sync it up manually.\n\n\n        if (!selectedTab && tabs[indexToSelect]) {\n          Promise.resolve().then(() => {\n            tabs[indexToSelect].isActive = true;\n            this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          });\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Listens to changes in all of the tabs. */\n\n\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n\n      this._tabs.notifyOnChanges();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabs.destroy();\n\n    this._tabsSubscription.unsubscribe();\n\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n\n\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Recalculates the tab group's pagination dimensions.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n\n\n  updatePagination() {\n    if (this._tabHeader) {\n      this._tabHeader.updatePagination();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n\n\n  focusTab(index) {\n    const header = this._tabHeader;\n\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n\n  _focusChanged(index) {\n    this._lastFocusedTabIndex = index;\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n\n\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n\n\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n\n\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /** Returns a unique id for each tab content element */\n\n\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n\n\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n\n\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n\n\n  _handleClick(tab, tabHeader, index) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n\n\n  _getTabIndex(tab, index) {\n    if (tab.disabled) {\n      return null;\n    }\n\n    const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n    return index === targetIndex ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n\n\n  _tabFocusChanged(focusOrigin, index) {\n    // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n    // can cause the tab to be moved out from under the pointer, interrupting the\n    // click sequence (see #21898). We don't need to scroll the tab into view for\n    // such cases anyway, because it will be done when the tab becomes selected.\n    if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n\n}\n\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {\n  return new (t || _MatTabGroupBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabGroupBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabGroupBase,\n  inputs: {\n    dynamicHeight: \"dynamicHeight\",\n    selectedIndex: \"selectedIndex\",\n    headerPosition: \"headerPosition\",\n    animationDuration: \"animationDuration\",\n    contentTabIndex: \"contentTabIndex\",\n    disablePagination: \"disablePagination\",\n    backgroundColor: \"backgroundColor\"\n  },\n  outputs: {\n    selectedIndexChange: \"selectedIndexChange\",\n    focusChange: \"focusChange\",\n    animationDone: \"animationDone\",\n    selectedTabChange: \"selectedTabChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabGroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    dynamicHeight: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    contentTabIndex: [{\n      type: Input\n    }],\n    disablePagination: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n\n\nclass MatTabGroup extends _MatTabGroupBase {\n  constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n\n}\n\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n  return new (t || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabGroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabGroup,\n  selectors: [[\"mat-tab-group\"]],\n  contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    }\n  },\n  viewQuery: function MatTabGroup_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(_c9, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-group\"],\n  hostVars: 4,\n  hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matTabGroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 7,\n  consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"ngClass\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"ngClass\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"ngClass\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\", \"ngIfElse\"], [\"tabTextLabel\", \"\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"ngClass\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]],\n  template: function MatTabGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n      i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n        return ctx._focusChanged($event);\n      })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n        return ctx.selectedIndex = $event;\n      });\n      i0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 5, 15, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 10, \"mat-tab-body\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    }\n  },\n  directives: [MatTabHeader, i3$1.NgForOf, MatTabLabelWrapper, i4.MatRipple, i7.CdkMonitorFocus, i3$1.NgClass, i3$1.NgIf, i7$1.CdkPortalOutlet, MatTabBody],\n  styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-tab-group',\n        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n      },\n      template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n      styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\n\n\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n    /** Theme color of the nav bar. */\n\n    this.color = 'primary';\n  }\n  /** Background color of the tab nav. */\n\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  /** Whether the ripple effect is disabled or not. */\n\n\n  get disableRipple() {\n    return this._disableRipple;\n  }\n\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n\n  _itemSelected() {// noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n\n\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n\n        this._changeDetectorRef.markForCheck();\n\n        if (this.tabPanel) {\n          this.tabPanel._activeTabId = items[i].id;\n        }\n\n        return;\n      }\n    } // The ink bar should hide itself if no items are active.\n\n\n    this.selectedIndex = -1;\n\n    this._inkBar.hide();\n  }\n\n  _getRole() {\n    return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n  }\n\n}\n\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {\n  return new (t || _MatTabNavBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabNavBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabNavBase,\n  inputs: {\n    backgroundColor: \"backgroundColor\",\n    disableRipple: \"disableRipple\",\n    color: \"color\",\n    tabPanel: \"tabPanel\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabNavBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    tabPanel: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n\n\nclass MatTabNav extends _MatTabNavBase {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n}\n\nMatTabNav.ɵfac = function MatTabNav_Factory(t) {\n  return new (t || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabNav.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabNav,\n  selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n  contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabNav_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"],\n  hostVars: 11,\n  hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx._getRole());\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matTabNavBar\", \"matTabNav\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  attrs: _c10,\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 10,\n  consts: [[\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"tabListInner\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabNav_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabNav_Template_button_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabNav_Template_button_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabNav_Template_button_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7, 8);\n      i0.ɵɵprojection(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"mat-ink-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 9, 10);\n      i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_button_mousedown_11_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabNav_Template_button_click_11_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabNav_Template_button_touchend_11_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(13, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n    }\n  },\n  directives: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      inputs: ['color'],\n      host: {\n        '[attr.role]': '_getRole()',\n        'class': 'mat-tab-nav-bar mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})(); // Boilerplate for applying mixins to MatTabLink.\n\n\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {})));\n/** Base class with all of the `MatTabLink` functionality. */\n\n\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n  constructor(_tabNavBar,\n  /** @docs-private */\n  elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    /** Whether the tab link is active or not. */\n\n    this._isActive = false;\n    /** Unique id for the tab. */\n\n    this.id = `mat-tab-link-${nextUniqueId++}`;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /** Whether the link is active. */\n\n\n  get active() {\n    return this._isActive;\n  }\n\n  set active(value) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._isActive) {\n      this._isActive = newValue;\n\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n\n\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /** Focuses the tab link. */\n\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  _handleFocus() {\n    // Since we allow navigation through tabbing in the nav bar, we\n    // have to update the focused index whenever the link receives focus.\n    this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n  }\n\n  _handleKeydown(event) {\n    if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n      this.elementRef.nativeElement.click();\n    }\n  }\n\n  _getAriaControls() {\n    return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n  }\n\n  _getAriaSelected() {\n    if (this._tabNavBar.tabPanel) {\n      return this.active ? 'true' : 'false';\n    } else {\n      return this.elementRef.nativeElement.getAttribute('aria-selected');\n    }\n  }\n\n  _getAriaCurrent() {\n    return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n  }\n\n  _getRole() {\n    return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n  }\n\n  _getTabIndex() {\n    if (this._tabNavBar.tabPanel) {\n      return this._isActive ? 0 : -1;\n    } else {\n      return this.tabIndex;\n    }\n  }\n\n}\n\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {\n  return new (t || _MatTabLinkBase)(i0.ɵɵdirectiveInject(_MatTabNavBase), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\n_MatTabLinkBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabLinkBase,\n  inputs: {\n    active: \"active\",\n    id: \"id\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabLinkBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: _MatTabNavBase\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    active: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n\n\nclass MatTabLink extends _MatTabLinkBase {\n  constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n\n}\n\nMatTabLink.ɵfac = function MatTabLink_Factory(t) {\n  return new (t || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatTabLink.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLink,\n  selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n  hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"],\n  hostVars: 11,\n  hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n        return ctx._handleFocus();\n      })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"matTabLink\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLink, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      inputs: ['disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-tab-link mat-focus-indicator',\n        '[attr.aria-controls]': '_getAriaControls()',\n        '[attr.aria-current]': '_getAriaCurrent()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.id]': 'id',\n        '[attr.tabIndex]': '_getTabIndex()',\n        '[attr.role]': '_getRole()',\n        '[class.mat-tab-disabled]': 'disabled',\n        '[class.mat-tab-label-active]': 'active',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatTabNav\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\n\n\nclass MatTabNavPanel {\n  constructor() {\n    /** Unique id for the tab panel. */\n    this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n  }\n\n}\n\nMatTabNavPanel.ɵfac = function MatTabNavPanel_Factory(t) {\n  return new (t || MatTabNavPanel)();\n};\n\nMatTabNavPanel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabNavPanel,\n  selectors: [[\"mat-tab-nav-panel\"]],\n  hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-tab-nav-panel\"],\n  hostVars: 2,\n  hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  },\n  exportAs: [\"matTabNavPanel\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTabNavPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNavPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-nav-panel',\n      exportAs: 'matTabNavPanel',\n      template: '<ng-content></ng-content>',\n      host: {\n        '[attr.aria-labelledby]': '_activeTabId',\n        '[attr.id]': 'id',\n        'class': 'mat-tab-nav-panel',\n        'role': 'tabpanel'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass MatTabsModule {}\n\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) {\n  return new (t || MatTabsModule)();\n};\n\nMatTabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatTabsModule\n});\nMatTabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n      // Don't export all components because some are only to be used internally.\n      exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabNavPanel, MatTabLink, MatTabContent],\n      declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabNavPanel, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };","map":{"version":3,"sources":["C:/Users/diego/OneDrive/Escritorio/ll/Lion_Shop/Lionshop-Frontend/node_modules/@angular/material/fesm2020/tabs.mjs"],"names":["i7","FocusKeyManager","A11yModule","i5","ObserversModule","i7$1","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalModule","i3$1","DOCUMENT","CommonModule","i0","InjectionToken","Directive","Inject","Optional","TemplateRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChild","ViewChild","Input","forwardRef","EventEmitter","Output","ContentChildren","QueryList","Attribute","NgModule","i4","mixinDisabled","mixinColor","mixinDisableRipple","mixinTabIndex","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","take","startWith","distinctUntilChanged","takeUntil","switchMap","skip","Subject","Subscription","fromEvent","of","merge","EMPTY","Observable","timer","i1","trigger","state","style","transition","animate","coerceNumberProperty","coerceBooleanProperty","i1$1","i3","normalizePassiveListenerOptions","hasModifierKey","SPACE","ENTER","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","onStable","pipe","subscribe","positions","inkBar","nativeElement","visibility","hide","ɵfac","ElementRef","NgZone","ɵdir","type","args","selector","host","undefined","decorators","MAT_TAB_CONTENT","MatTabContent","template","provide","useExisting","providers","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","templateRef","viewContainerRef","_closestTab","ViewContainerRef","_MatTabBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","textLabel","_contentPortal","_stateChanges","position","origin","isActive","templateLabel","_templateLabel","value","_setTemplateLabelInput","content","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","ɵcmp","inputs","changeDetection","Default","encapsulation","None","exportAs","read","static","ariaLabel","ariaLabelledby","labelClass","bodyClass","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_document","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","ComponentFactoryResolver","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","Directionality","ChangeDetectorRef","elementRef","animations","styles","_portalHost","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","runOutsideAngular","_stopInterval","selectedIndex","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","ngAfterContentInit","dirChange","resize","realign","updatePagination","_alignInkBarToSelectedTab","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","_itemsResized","run","Promise","resolve","then","Math","max","min","_getMaxScrollDistance","newFocusIndex","_setTabFocus","ResizeObserver","tabItems","observer","resizeObserver","forEach","item","observe","disconnect","ngAfterContentChecked","_tabLabelCount","length","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","focusIndex","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","index","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","isEnabled","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","maxScrollDistance","distance","ViewportRuler","Platform","_MatTabHeaderBase","viewportRuler","ngZone","platform","animationMode","_disableRipple","disableRipple","preventDefault","MatTabHeader","MatRipple","CdkObserveContent","outputs","descendants","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_tabs","_indexToSelect","_lastFocusedTabIndex","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_dynamicHeight","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","selectedTab","i","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","focusTab","header","_focusChanged","map","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","_getTabIndex","targetIndex","_tabFocusChanged","focusOrigin","MatTabGroup","NgForOf","CdkMonitorFocus","NgClass","NgIf","nextUniqueId","_MatTabNavBase","color","updateActiveLink","items","active","tabPanel","_activeTabId","id","_getRole","getAttribute","MatTabNav","MatTabLink","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","animation","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","_handleFocus","indexOf","click","_getAriaControls","_getAriaSelected","_getAriaCurrent","FocusMonitor","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabNavPanel","OnPush","MatTabsModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            const positions = this._inkBarPositioner(element);\n            const inkBar = this._elementRef.nativeElement;\n            inkBar.style.left = positions.left;\n            inkBar.style.width = positions.width;\n        });\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_MAT_INK_BAR_POSITIONER]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], labelClass: \"labelClass\", bodyClass: \"bodyClass\" }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB_GROUP]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], labelClass: [{\n                type: Input\n            }], bodyClass: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatTabBody)]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"], directives: [{ type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n        // can hold up tests that are in a background tab.\n        this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes, this._itemsResized())\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => {\n                Promise.resolve().then(() => {\n                    // Clamp the scroll distance, because it can change with the number of tabs.\n                    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n                    realign();\n                });\n            });\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n        if (typeof ResizeObserver !== 'function') {\n            return EMPTY;\n        }\n        return this._items.changes.pipe(startWith(this._items), switchMap((tabItems) => new Observable((observer) => this._ngZone.runOutsideAngular(() => {\n            const resizeObserver = new ResizeObserver(() => {\n                observer.next();\n            });\n            tabItems.forEach(item => {\n                resizeObserver.observe(item.elementRef.nativeElement);\n            });\n            return () => {\n                resizeObserver.disconnect();\n            };\n        }))), \n        // Skip the first emit since the resize observer emits when an item\n        // is observed for new items when the tab is already inserted\n        skip(1));\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Index of the tab that was focused last. */\n        this._lastFocusedTabIndex = null;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._lastFocusedTabIndex = null;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                let selectedTab;\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        this._lastFocusedTabIndex = null;\n                        selectedTab = tabs[i];\n                        break;\n                    }\n                }\n                // If we haven't found an active tab and a tab exists at the selected index, it means\n                // that the active tab was swapped out. Since this won't be picked up by the rendering\n                // loop in `ngAfterContentChecked`, we need to sync it up manually.\n                if (!selectedTab && tabs[indexToSelect]) {\n                    Promise.resolve().then(() => {\n                        tabs[indexToSelect].isActive = true;\n                        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                    });\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        if (this._tabHeader) {\n            this._tabHeader.updatePagination();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this._lastFocusedTabIndex = index;\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, index) {\n        if (tab.disabled) {\n            return null;\n        }\n        const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n        return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], components: [{ type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }, { type: MatTabBody, selector: \"mat-tab-body\" }], directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                if (this.tabPanel) {\n                    this.tabPanel._activeTabId = items[i].id;\n                }\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n    _getRole() {\n        return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\", tabPanel: \"tabPanel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], tabPanel: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"attr.role\": \"_getRole()\", \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        '[attr.role]': '_getRole()',\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        /** Unique id for the tab. */\n        this.id = `mat-tab-link-${nextUniqueId++}`;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n        if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n            this.elementRef.nativeElement.click();\n        }\n    }\n    _getAriaControls() {\n        return this._tabNavBar.tabPanel\n            ? this._tabNavBar.tabPanel?.id\n            : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n        if (this._tabNavBar.tabPanel) {\n            return this.active ? 'true' : 'false';\n        }\n        else {\n            return this.elementRef.nativeElement.getAttribute('aria-selected');\n        }\n    }\n    _getAriaCurrent() {\n        return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n        return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n        if (this._tabNavBar.tabPanel) {\n            return this._isActive ? 0 : -1;\n        }\n        else {\n            return this.tabIndex;\n        }\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabLinkBase, inputs: { active: \"active\", id: \"id\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { active: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-controls\": \"_getAriaControls()\", \"attr.aria-current\": \"_getAriaCurrent()\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.id\": \"id\", \"attr.tabIndex\": \"_getTabIndex()\", \"attr.role\": \"_getRole()\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-controls]': '_getAriaControls()',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.id]': 'id',\n                        '[attr.tabIndex]': '_getTabIndex()',\n                        '[attr.role]': '_getRole()',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n    constructor() {\n        /** Unique id for the tab panel. */\n        this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n}\nMatTabNavPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatTabNavPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNavPanel, selector: \"mat-tab-nav-panel\", inputs: { id: \"id\" }, host: { attributes: { \"role\": \"tabpanel\" }, properties: { \"attr.aria-labelledby\": \"_activeTabId\", \"attr.id\": \"id\" }, classAttribute: \"mat-tab-nav-panel\" }, exportAs: [\"matTabNavPanel\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-tab-nav-panel',\n                    exportAs: 'matTabNavPanel',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        '[attr.aria-labelledby]': '_activeTabId',\n                        '[attr.id]': 'id',\n                        'class': 'mat-tab-nav-panel',\n                        'role': 'tabpanel',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n"]},"metadata":{},"sourceType":"module"}